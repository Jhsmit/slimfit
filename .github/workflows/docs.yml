name: Publish Documentation


on:
  push:
    branches:
      - master

permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached requirements file
        id: cached-requirements
        uses: actions/cache@v3
        with:
          path: _req-${{ matrix.os }}-${{ matrix.python-version }}.txt
          key: req-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
      
      - name: Generate requirements file
        if: steps.cached-requirements.outputs.cache-hit != 'true'
        run: |
          python -m pip install pip-tools
          pip-compile --all-extras -o _req-${{ matrix.os }}-${{ matrix.python-version }}.txt pyproject.toml

      - name: Load cached venv
        id: cached-deps
        uses: actions/cache@v3
        with:
          path: ${{ matrix.path }}
          key: pip-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('_req*.txt') }}

      - name: Install dependencies
        if: steps.cached-deps.outputs.cache-hit != 'true'
        # prefer binary to avoid issues with matplotlib
        run: |
          pip install -r _req-${{ matrix.os }}-${{ matrix.python-version }}.txt --prefer-binary
      - name: Build documentation
        run:  mkdocs gh-deploy --force --clean --verbose