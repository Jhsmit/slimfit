name: Testing and Linting
on: [push]

# adapted from: https://github.com/tiangolo/fastapi/blob/master/.github/workflows/test.yml
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - uses: actions/cache@v3
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: ${{ runner.os }}-pip
      - run: python -m pip install black
      - run: |
          black . --check

  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest", "macos-latest" , "windows-latest"]
        python-version: ["3.9", "3.10" ]
        include:
        - os: ubuntu-latest
          path: ~/.cache/pip
        - os: macos-latest
          path: ~/Library/Caches/pip
        - os: windows-latest
          path: ~\AppData\Local\pip\Cache
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached requirements file
        id: cached-requirements
        uses: actions/cache@v3
        with:
          path: _req-${{ matrix.os }}-${{ matrix.python-version }}.txt
          key: req-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
      - name: Generate requirements file
        if: steps.cached-requirements.outputs.cache-hit != 'true'
        run: |
          python -m pip install pip-tools
          pip-compile --all-extras -o _req-${{ matrix.os }}-${{ matrix.python-version }}.txt pyproject.toml

      - name: Load cached venv
        id: cached-deps
        uses: actions/cache@v3
        with:
          path: ${{ matrix.path }}
          key: pip-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('_req*.txt') }}

      - name: Install dependencies
        # if: steps.cached-deps.outputs.cache-hit != 'true'
        # prefer binary to avoid issues with matplotlib
        run: |
          pip install -r _req-${{ matrix.os }}-${{ matrix.python-version }}.txt --prefer-binary
      #----------------------------------------------
      #             install root project
      #----------------------------------------------
      - name: Install library
        run: pip install -e .
      #----------------------------------------------
      #               run test suite
      #----------------------------------------------
      - name: Run tests
        run: |
          pytest tests/
